/* Automatically generated by wasm2c */
#ifndef MAIN_H_GENERATED_
#define MAIN_H_GENERATED_

#include <stdint.h>

#include "wasm-rt.h"

/* TODO(binji): only use stdint.h types in header */
#ifndef WASM_RT_CORE_TYPES_DEFINED
#define WASM_RT_CORE_TYPES_DEFINED
typedef uint8_t u8;
typedef int8_t s8;
typedef uint16_t u16;
typedef int16_t s16;
typedef uint32_t u32;
typedef int32_t s32;
typedef uint64_t u64;
typedef int64_t s64;
typedef float f32;
typedef double f64;
#endif

#ifdef __cplusplus
extern "C" {
#endif

struct Z_env_instance_t;
struct Z_wasi_snapshot_preview1_instance_t;

typedef struct Z_main_instance_t {
  struct Z_env_instance_t* Z_env_instance;
  struct Z_wasi_snapshot_preview1_instance_t* Z_wasi_snapshot_preview1_instance;
  u32 w2c___stack_pointer;
  u32 w2c_g1;
  u32 w2c_g2;
  wasm_rt_memory_t w2c_memory;
  wasm_rt_funcref_table_t w2c_T0;
} Z_main_instance_t;

void Z_main_init_module(void);
void Z_main_instantiate(Z_main_instance_t*, struct Z_env_instance_t*, struct Z_wasi_snapshot_preview1_instance_t*);
void Z_main_free(Z_main_instance_t*);

/* import: 'env' 'runtime.ticks' */
f64 Z_envZ_runtimeZ2Eticks(struct Z_env_instance_t*);
/* import: 'env' 'syscall/js.finalizeRef' */
void Z_envZ_syscallZ2FjsZ2EfinalizeRef(struct Z_env_instance_t*, u32, u32);
/* import: 'env' 'syscall/js.stringVal' */
void Z_envZ_syscallZ2FjsZ2EstringVal(struct Z_env_instance_t*, u32, u32, u32, u32);
/* import: 'env' 'syscall/js.valueCall' */
void Z_envZ_syscallZ2FjsZ2EvalueCall(struct Z_env_instance_t*, u32, u32, u32, u32, u32, u32, u32, u32);
/* import: 'env' 'syscall/js.valueGet' */
void Z_envZ_syscallZ2FjsZ2EvalueGet(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'env' 'syscall/js.valueIndex' */
void Z_envZ_syscallZ2FjsZ2EvalueIndex(struct Z_env_instance_t*, u32, u32, u32, u32);
/* import: 'env' 'syscall/js.valueLength' */
u32 Z_envZ_syscallZ2FjsZ2EvalueLength(struct Z_env_instance_t*, u32, u32);
/* import: 'env' 'syscall/js.valueLoadString' */
void Z_envZ_syscallZ2FjsZ2EvalueLoadString(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'env' 'syscall/js.valuePrepareString' */
void Z_envZ_syscallZ2FjsZ2EvaluePrepareString(struct Z_env_instance_t*, u32, u32, u32);
/* import: 'env' 'syscall/js.valueSet' */
void Z_envZ_syscallZ2FjsZ2EvalueSet(struct Z_env_instance_t*, u32, u32, u32, u32, u32);
/* import: 'wasi_snapshot_preview1' 'fd_write' */
u32 Z_wasi_snapshot_preview1Z_fd_write(struct Z_wasi_snapshot_preview1_instance_t*, u32, u32, u32, u32);

/* export: 'memory' */
wasm_rt_memory_t* Z_mainZ_memory(Z_main_instance_t* instance);

/* export: 'malloc' */
u32 Z_mainZ_malloc(Z_main_instance_t*, u32);

/* export: 'free' */
void Z_mainZ_free(Z_main_instance_t*, u32);

/* export: 'calloc' */
u32 Z_mainZ_calloc(Z_main_instance_t*, u32, u32);

/* export: 'realloc' */
u32 Z_mainZ_realloc(Z_main_instance_t*, u32, u32);

/* export: '_start' */
void Z_mainZ__start(Z_main_instance_t*);

/* export: 'resume' */
void Z_mainZ_resume(Z_main_instance_t*);

/* export: 'go_scheduler' */
void Z_mainZ_go_scheduler(Z_main_instance_t*);

/* export: 'asyncify_start_unwind' */
void Z_mainZ_asyncify_start_unwind(Z_main_instance_t*, u32);

/* export: 'asyncify_stop_unwind' */
void Z_mainZ_asyncify_stop_unwind(Z_main_instance_t*);

/* export: 'asyncify_start_rewind' */
void Z_mainZ_asyncify_start_rewind(Z_main_instance_t*, u32);

/* export: 'asyncify_stop_rewind' */
void Z_mainZ_asyncify_stop_rewind(Z_main_instance_t*);

/* export: 'asyncify_get_state' */
u32 Z_mainZ_asyncify_get_state(Z_main_instance_t*);

#ifdef __cplusplus
}
#endif

#endif  /* MAIN_H_GENERATED_ */
